<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ElevatorCar_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
m_player = undefined;
m_shaft = undefined;
m_speedMax = 4;
m_accel = .05;
m_yBottom = 0;
m_slowDownPoint = 200;
m_slowDownMinSpd = 1.5;
depth = -100;
image_speed = 0;

m_audioEmitter = audio_emitter_create();
audio_emitter_position(m_audioEmitter, x, y, 0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Place Player in car
if(y != m_yBottom)
{
  m_player.x = x;
  m_player.y = y;
  audio_emitter_position(m_audioEmitter, x, y, 0);  

  var diff = m_yBottom - y;
  if(diff &gt; m_slowDownPoint)
  {
    vspeed += m_accel;
    vspeed = limit_value_magnitude(vspeed, m_speedMax);
  }
  else
  {
    if(diff &lt;= m_slowDownMinSpd)
    {
      y = m_yBottom;
      vspeed = 0;
      m_player.m_combatantState = CombatantStates.Ground;
    }
    else
    {
      vspeed = m_speedMax * diff/m_slowDownPoint;
      if(vspeed &lt; m_slowDownMinSpd)
      {
        vspeed = m_slowDownMinSpd;
      }
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get shaft instance
m_shaft = instance_place(x, y, ElevatorShaft_obj);
//depth = m_shaft - 2;
m_yBottom = m_shaft.y + m_shaft.image_yscale * 
  sprite_get_height(m_shaft.sprite_index) - sprite_get_yoffset(sprite_index);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn player
if(y &lt; 0)
{
  //This is the starting elevator, spawn the player
  m_player = instance_create(x, y, Player1_obj);
  m_player.m_combatantState = CombatantStates.None;
  m_player.m_playerState = PlayerStates.None;
  m_player.depth = depth + 1;
  
  //Play the descend audio
  audio_play_sound_on(m_audioEmitter, Descend_snd, false, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
