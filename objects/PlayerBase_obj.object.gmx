<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Friendly_obj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PlayerBase_obj Init
event_inherited();

//Unique Player States
enum PlayerStates
{
  WallLatch,
  WallSlide,
  None
}

enum PlayerAlarms
{
  WallLatchToSlide = 0,
  JumpLag = 2
}

m_combatantHp = 3;

//Sprites
//m_combatantSpriteRun = PlayerRun_spr
//m_combatantSpriteJump = PlayerJump_spr
m_combatantSpriteIdle = Player_spr;
m_combatantSpriteFall = PlayerFall_spr;
m_combatantSpriteRun = PlayerRun_spr;
m_playerSpriteWallCling = PlayerWallCling_spr;
m_combatantSpriteGroundAttack = PlayerAttackGroundDash_spr;
m_combatantSpriteJumpCrouch = PlayerJumpCrouch_spr;
m_combatantImageSpeedGroundAttack = 15/room_speed;

m_combatantState = CombatantStates.Ground;

//Combatant Movement
m_movementGroundMaxSpeed = 6;
m_movementAirFallMaxSpeedHor = 7.5;
m_movementGroundAccelHor = 1;
m_movementAirFallAccelHor = .75;
m_movementGroundFriction = .5;
m_movementGroundMaxSpeed = 8.5;
m_movementGroundJumpSpeed = 10;
m_movementAirFastFallSpeed = global.TerminalVelocity * 1.3;

m_playerState = PlayerStates.None;
m_analogStickUsed = false;

//Player-specific movment
m_playerMovementWallLatchTime = .2*room_speed;
m_playerMovementWallSlideGravity = .07;
m_playerMovementWallSlideMaxSpeed = 5;
m_playerMovementJumpGrav = global.Gravity * .7;
m_playerMovementModifyGrav = false;
m_playerMovementJumpLag = room_speed/10;
m_playerMovementJumpShortSpeed = m_movementGroundJumpSpeed * .75; 
m_playerWallLatchJumpSpeed = 10;
m_playerWallSlideJumpSpeed = 8.5;
m_playerWallJumpLateralSpeedRatio = .7;
m_playerWallLatchSpeedThresh = 4;
m_playerWallSlideSpeedThresh = 1.5;

//Audio
//m_audioRun = Run_snd;
m_audioJump = PlayerJump_snd;
//m_audioGroundAttack = array();
//Register run step sounds with specific frames of the run animation
Entity_RegisterAnimationEvent_scr(id, PlayerRun_spr, 
  1, PlayerBase_PlayRunStepSound_scr, id);
Entity_RegisterAnimationEvent_scr(id, PlayerRun_spr, 
  5, PlayerBase_PlayRunStepSound_scr, id);  
  
//Register hitboxes with 
Entity_RegisterAnimationEvent_scr(id, PlayerAttackGroundDash_spr, 
  4, Combatant_AddHitboxAttack_scr, array(HitboxPlayerSlash_spr, 73, 0, 4));
Combatant_SetAttackDamage_scr(PlayerAttackGroundDash_spr, 5);
Combatant_SetAttackKnockback_scr(PlayerAttackGroundDash_spr, 5, 5);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Jump
PlayerBase_Jump_scr();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Machine

switch(m_combatantState)
{
  case CombatantStates.Ground:
    PlayerBase_StateGround_scr();
    break;
  case CombatantStates.Air:
    PlayerBase_AirControlsMovement_scr();
    break;
  case CombatantStates.FastFall:
    PlayerBase_AirControlsMovement_scr();
    break;
}

switch(m_playerState)
{
  case PlayerStates.WallLatch:
    PlayerBase_StateWallLatch_scr();  
    break;
  case PlayerStates.WallSlide:
    PlayerBase_StateWallSlide_scr();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Machine

switch(m_combatantState)
{
  case CombatantStates.Ground:
    PlayerBase_StateGround_scr();
    break;
  case CombatantStates.Air:
    PlayerBase_AirControlsMovement_scr();
    break;
}

switch(m_playerState)
{
  case PlayerStates.WallLatch:
    PlayerBase_StateWallLatch_scr();  
    break;
  case PlayerStates.WallSlide:
    PlayerBase_StateWallSlide_scr();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ancestor Events
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
